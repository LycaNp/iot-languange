Script

Introduction
slide1
In the last 3 lessons you learned about converting speech to text, language understanding, and converting text to speech, all powered by AI. One other area of human communication that AI can help with is language translation - converting from one language to another, such as from English to French.

In this lesson you will learn about using AI to translate text, allowing your smart timer to interact with users in multiple languages.

slide2-Table of contents
In this lesson we'll cover:

Translate text
Machine translation and the models
Neural translation
Translation services
Create a translator resource
Support multiple languages in applications with translations
Translate text using an AI service


slide3-Translate text
Text translation has been a computer science problem that has been researched for over 70 years, and only now thanks to advances in AI and computer power is close to being solved to a point where it is almost as good as human translators. Text translation started out as a technology known as Machine translations
This is the history and the importance of translation throughout the history
(show vid)


slide4-Machine translations
As I have said before, Text translation started out as a technology known as Machine Translation (MT), that can translate between different language pairs. MT works by substituting words in one language with another, adding techniques to select the correct ways of translating phrases or parts of sentences when a simple word-for-word translation doesn't make sense.


slide5-This is the timeline of each model that were used then until now. Next we will go into each model.

Models:
Slide: RBMT (Rule-Based Machine Translation)

"RBMT, or Rule-Based Machine Translation, was one of the earliest approaches. It uses handcrafted grammar rules and dictionaries written by linguists. It works really well for structured, formal writing — like legal documents or manuals. But it struggles with ambiguity, slang, or informal conversation. Basically, if the sentence follows strict rules, RBMT handles it fine — but anything casual can confuse it."

Slide: EBMT (Example-Based Machine Translation)

"EBMT works differently — instead of relying on rules, it learns from examples. It compares the input sentence to a database of past translations and tries to reuse matching chunks. This method is great when translating similar phrases in specific fields — like technical manuals or medical content. But if the input is something totally new or phrased differently, it might not find a good match and produce poor output."

Slide: SMT (Statistical Machine Translation)

"SMT takes a statistical approach — it analyzes huge datasets of translated texts and calculates which translations are most likely. It doesn’t understand grammar like RBMT, but uses probabilities to guess the best translation. Often, it translates from the source language into a 'pivot' language first, then to the target language. It’s more flexible and scalable — but it can produce awkward or clunky sentences because it doesn't really understand the meaning."

Slide: Hybrid Model

"Hybrid models combine the strengths of other approaches — usually rules from RBMT and data from SMT or EBMT. Rules help maintain structure and grammar, while the examples or statistics handle idioms and informal language. This balance makes translations more accurate and natural. In fact, many early commercial systems like Google Translate used a hybrid approach before moving to neural networks."

Slide: Why Hybrid?

"So why combine models? Because each one has limitations on its own. Rules are good for structure but can’t handle real-world usage. Statistical or example-based systems are flexible but can lack precision. By combining them, hybrid models strike a balance — they produce translations that are both grammatically correct and sound natural. That’s why they became popular before neural translation took over."


slide: problem with earlier translations & why do we need sth better
Earlier translation models had a lot of limitations. Word-by-word translation often led to robotic or awkward results. Rule-based models required tons of manual effort and still couldn’t handle flexible grammar or idioms. Even statistical models could make weird or clunky choices.

What we really need is something that understands the meaning behind full sentences — something that can adapt, learn from data, and produce fluent, natural translations. That’s why we moved toward neural machine translation, which brings us closer to human-level quality.


Neural translation
+Neural Translation Uses AI and Deep Learning
(Neural translation systems leverage artificial intelligence to translate full sentences contextually, using models trained on large, human-translated datasets.)

+Training Data is Crucial
(These models learn from extensive corpora like books, websites, and international documents (e.g., UN records), allowing them to capture nuanced patterns in language.)

+Efficiency Over Traditional Models
(Neural models typically require less storage than older phrase-based machine translation systems since they rely on learned representations rather than large phrase dictionaries.)

+Hybrid Approaches Are Common
(Many modern translation services combine neural translation with other methods (like statistical machine translation) to improve accuracy and robustness.)

+Translations Are Inherently Non-Symmetrical
Translating a sentence from Language A to B and then back to A often yields different wording due to differences in grammar, idioms, and semantics between languages.

+Model Performance Depends on Training Data
Different neural translation models may generate varying results for the same input, depending on the quality, scope, and bias of their training data.


Support multiple languages in application with translations

In the real world, the application should understand as many different languages as possible, from listening for speech, to language understanding, to responding with speech. Translation services can speed up the time to delivery of application.

Imagine you are building a smart timer that uses English end-to-end, understanding spoken English and converting that to text, running the language understanding in English, building up responses in English and replying with English speech. If you wanted to add support for Japanese, you could start with translating spoken Japanese to English text, then keep the core of the application the same, then translate the response text to Japanese before speaking the response. This would allow you to quickly add Japanese support, and you can expand to providing full end-to-end Japanese support later.

The downside to relying on machine translation is that different languages and cultures have different ways of saying the same things, so the translation may not match the expression you are expecting.

There are already apps and devices that provide real-time translation of speech and written text, using combinations of speech and translation services. Here is the list of devices that are commercially available:
Pocketalk Translator
Langogo Genesis
Travis Touch Go
Timekettle WT2 Edge

How about translation capabilities built into smart devices?
Smartphones
Smart Assistants
Wearables (watches/earbuds)

How can machine translations benefit other IoT applications beyond smart devices?
Use case: Healthcare (can read on slides)
Value:
Ensures accurate communication between patients and caregivers from different language backgrounds
Helps global hospitals manage patients more effectively with multilingual documentation

Use case: Smart homes (can read on slides)
Value:
Improves accessibility and safety for non-native speakers or multilingual households
Enables culturally adaptive user interfaces


Imagine having such a device available to you, especially when travelling or interacting with folks whose language you don't know. Having automatic translation devices in airports or hospitals would provide much needed accessibility improvements.

